# Generated by Django 4.2.17 on 2025-08-26 03:44

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('my_app', '0009_course_section_track_remove_user_high_score_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChallengeSolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution_code', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('section_lesson', 'Section - Lesson'), ('section_exercise', 'Section - Exercise'), ('section_quiz', 'Section - Quiz'), ('section_project', 'Section - Project'), ('coding_challenge_easy', 'Coding Challenge - Easy'), ('coding_challenge_medium', 'Coding Challenge - Medium'), ('coding_challenge_hard', 'Coding Challenge - Hard'), ('track_completion', 'Track Completion'), ('daily_streak', 'Daily Streak'), ('referral_bonus', 'Referral Bonus')], max_length=50)),
                ('base_points', models.IntegerField()),
                ('cash_value_per_point', models.DecimalField(decimal_places=4, default=Decimal('0.01'), max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('content_type',)},
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('section_complete', 'Section Completed'), ('challenge_solve', 'Coding Challenge Solved'), ('track_complete', 'Track Completed'), ('daily_streak', 'Daily Streak Bonus'), ('referral_bonus', 'Referral Bonus'), ('manual_adjustment', 'Manual Adjustment'), ('payout_request', 'Payout Requested'), ('payout_processed', 'Payout Processed')], max_length=50)),
                ('points_earned', models.IntegerField()),
                ('cash_value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('related_section_id', models.IntegerField(blank=True, null=True)),
                ('related_challenge_id', models.IntegerField(blank=True, null=True)),
                ('related_track_id', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learning_points', models.IntegerField(default=0)),
                ('challenge_points', models.IntegerField(default=0)),
                ('bonus_points', models.IntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('pending_payout', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('lifetime_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('payout_threshold', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=6)),
                ('payout_email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.RenameField(
            model_name='studentprogress',
            old_name='total_points_earned',
            new_name='longest_streak',
        ),
        migrations.RemoveField(
            model_name='section',
            name='points',
        ),
        migrations.RemoveField(
            model_name='user',
            name='overall_score',
        ),
        migrations.AddField(
            model_name='codechallenge',
            name='difficulty',
            field=models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='easy', max_length=10),
        ),
        migrations.AddField(
            model_name='codechallenge',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='codechallenge',
            name='is_standalone',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='codechallenge',
            name='tags',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='track',
            name='access_level',
            field=models.CharField(choices=[('free', 'Free Access'), ('basic', 'Basic Subscription Required'), ('premium', 'Premium Subscription Required')], default='free', max_length=20),
        ),
        migrations.AddField(
            model_name='track',
            name='one_time_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='subscription_expires',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='subscription_tier',
            field=models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('premium', 'Premium')], default='free', max_length=20),
        ),
        migrations.AlterField(
            model_name='codechallenge',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='course',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='quote',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='section',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='sectioncompletion',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='studentprogress',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='track',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='trackenrollment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='user',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='userquote',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.DeleteModel(
            name='TrackScore',
        ),
        migrations.AddField(
            model_name='userwallet',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to='my_app.user'),
        ),
        migrations.AddField(
            model_name='pointtransaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_transactions', to='my_app.user'),
        ),
        migrations.AddField(
            model_name='challengesolution',
            name='challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.codechallenge'),
        ),
        migrations.AddField(
            model_name='challengesolution',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.user'),
        ),
        migrations.AlterUniqueTogether(
            name='challengesolution',
            unique_together={('student', 'challenge')},
        ),
    ]
